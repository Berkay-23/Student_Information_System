// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SISAPI.Persistence.Contexts;

namespace SISAPI.Persistence.Migrations
{
    [DbContext(typeof(SISContext))]
    [Migration("20220330220432_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SISAPI.Domain.Entities.Absenteeism", b =>
                {
                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short>("LessonId")
                        .HasColumnType("smallint");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PracticalAbs")
                        .HasColumnType("tinyint");

                    b.Property<string>("StudentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TheoreticalAbs")
                        .HasColumnType("tinyint");

                    b.ToTable("Absenteeism");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.Academic", b =>
                {
                    b.Property<short>("AcademicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcademicianId");

                    b.ToTable("Academics");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.GradeInformation", b =>
                {
                    b.Property<string>("StudentNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gpas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TotalEcts")
                        .HasColumnType("smallint");

                    b.Property<double>("TranscriptNote")
                        .HasColumnType("float");

                    b.HasKey("StudentNo");

                    b.ToTable("GradeInformations");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.Lesson", b =>
                {
                    b.Property<short>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Credit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Ects")
                        .HasColumnType("tinyint");

                    b.Property<byte>("GradeLevel")
                        .HasColumnType("tinyint");

                    b.Property<short?>("LecturerId")
                        .HasColumnType("smallint");

                    b.Property<string>("LessonCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("PraticalLimit")
                        .HasColumnType("tinyint");

                    b.Property<string>("Semester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("TheoreticalLimit")
                        .HasColumnType("tinyint");

                    b.HasKey("LessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.LessonInformation", b =>
                {
                    b.Property<string>("RegisteredCourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetakeFailCourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("LessonInformations");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.Note", b =>
                {
                    b.Property<double?>("Average")
                        .HasColumnType("float");

                    b.Property<double?>("FinalExam")
                        .HasColumnType("float");

                    b.Property<short>("LessonId")
                        .HasColumnType("smallint");

                    b.Property<double?>("LetterScore")
                        .HasColumnType("float");

                    b.Property<double?>("MakeUpExam1")
                        .HasColumnType("float");

                    b.Property<double?>("MakeUpExam2")
                        .HasColumnType("float");

                    b.Property<double?>("MidtermExam")
                        .HasColumnType("float");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StudentNo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.Student", b =>
                {
                    b.Property<string>("StudentNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("student_no");

                    b.Property<short?>("AdvisorId")
                        .HasColumnType("smallint");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("GradeLevel")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentNo");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SISAPI.Domain.Entities.UnsuccessfulStudent", b =>
                {
                    b.Property<short>("LessonId")
                        .HasColumnType("smallint");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfFailure")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UnsuccessfulStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
